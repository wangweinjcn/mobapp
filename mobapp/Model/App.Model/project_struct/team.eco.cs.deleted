//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Model.project_struct {
  using System;
  using System.Collections;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.CodeDom.Compiler;
  using Eco.ObjectImplementation;
  using Eco.ObjectRepresentation;
  using Eco.Services;
  using Eco.Subscription;
  using Eco.UmlCodeAttributes;
  using Eco.UmlRt;
  
  
  [UmlElement(Id="4d2f1e0d-4810-46e6-b1db-a310097e3fbb")]
  [UmlMetaAttribute("constraint", "constraint-team.leader-check=true@Error@@False@5760db06-7c99-43cc-8b30-055a45fe77" +
    "ca")]
  public partial class team : App.Model.comm.base_class {
    
    #region *** Constructors ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) : 
        base(serviceProvider) {
      try {
        this.ObjectCreated();
      }
      catch (System.Exception ) {
        this.Deinitialize(serviceProvider);
        throw;
      }
    }
    
    /// <summary>
    /// For framework internal use only
    /// Constructor public for one reason only; to avoid need for ReflectionPermission in reduced trust
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team(Eco.ObjectImplementation.IContent content) : 
        base(content) {
      this.ObjectFetched();
    }
    
    /// <summary>
    /// Creates an Offline object. Can for example be used by MVC runtime to pass values
    /// This is type equivalent to the eco object in everyway - but has none of the eco services
    /// It does however implement INotifyPropertyChanged and INotifyCollectionChanged
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team() {
      this.eco_Content = new EcoOfflineValues();
      this.ObjectCreated();
    }
    
    /// <summary>This method is called when the object has been created the first time (not when loaded from a db)</summary>
    partial void ObjectCreated();
    
    /// <summary>This method is called when the object has been loaded from a db (not when it is created the first time)</summary>
    partial void ObjectFetched();
    
    /// <summary>This method is called before the object is deleted. You can perform custom clean up or prevent the deletion by returning false or throw an exception (preferably EcoObjectDeleteException)</summary>
    partial void PreDelete(ref System.Boolean canDelete);
    
    #endregion *** Constructors ***
    
    #region *** ILoopback implementation ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override void set_MemberByIndex(int index, object value) {
      base.set_MemberByIndex(index, value);
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override object get_MemberByIndex(int index) {
      return base.get_MemberByIndex(index);
    }
    
    #endregion *** ILoopback implementation ***
    
    #region *** LoopbackIndex declarations ***
    
    new public struct Eco_LoopbackIndices {
      
      public const int Eco_FirstMember = App.Model.comm.base_class.Eco_LoopbackIndices.Eco_MemberCount;
      
      public const int leadername = Eco_FirstMember;
      
      public const int name = (leadername + 1);
      
      public const int team_member = (name + 1);
      
      public const int leader = (team_member + 1);
      
      public const int team_group = (leader + 1);
      
      public const int Eco_MemberCount = (team_group + 1);
    }
    
    #endregion *** LoopbackIndex declarations ***
    
    [UmlElement(Id="19c16f8f-37d8-4ad0-b9e9-354cc1f538aa", Index=Eco_LoopbackIndices.leadername)]
    [UmlTaggedValue("derived", "True")]
    [UmlTaggedValue("Eco.DerivationOCL", "if self.leader->isempty then\r\n\'\' else\r\nself.leader.Username\r\nendif")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string leadername {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.leadername, typeof(string))));
      }
    }
    
    [UmlElement(Id="aa7fecb5-8fc3-4f69-a10c-c87637b57fe3", Index=Eco_LoopbackIndices.name)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string name {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.name, typeof(string))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.name, ((object)(value)), "name");
      }
    }
    
    [UmlElement("AssociationEnd", Id="3768f53d-8bea-434a-985a-4b371609020a", Index=Eco_LoopbackIndices.team_member)]
    [UmlMetaAttribute("association", typeof(project_structPackage.teamteamteam_memberteam_member), Index=1)]
    [UmlMetaAttribute("multiplicity", "0..*")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public IEcoList<team_member> team_member {
      get {
        return ((IEcoList<team_member>)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team_member, typeof(IEcoList<team_member>))));
      }
    }
    
    [UmlElement("AssociationEnd", Id="7fa00775-3b2f-4f96-8c43-e1f601d2f618", Index=Eco_LoopbackIndices.leader)]
    [UmlMetaAttribute("association", typeof(project_structPackage.userleaderteammyown_teams), Index=1)]
    [UmlMetaAttribute("multiplicity", "0..1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public App.Model.comm.user leader {
      get {
        return ((App.Model.comm.user)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.leader, typeof(App.Model.comm.user))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.leader, ((object)(value)), "leader");
      }
    }
    
    [UmlElement("AssociationEnd", Id="a0f3910f-4f88-48de-a617-071acf019dcc", Index=Eco_LoopbackIndices.team_group)]
    [UmlMetaAttribute("association", typeof(project_structPackage.teamteamteam_groupteam_group), Index=1)]
    [UmlMetaAttribute("multiplicity", "0..*")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public IEcoList<team_group> team_group {
      get {
        return ((IEcoList<team_group>)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team_group, typeof(IEcoList<team_group>))));
      }
    }
  }
}
