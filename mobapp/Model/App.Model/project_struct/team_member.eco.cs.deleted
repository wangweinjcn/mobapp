//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Model.project_struct {
  using System;
  using System.Collections;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.CodeDom.Compiler;
  using Eco.ObjectImplementation;
  using Eco.ObjectRepresentation;
  using Eco.Services;
  using Eco.Subscription;
  using Eco.UmlCodeAttributes;
  using Eco.UmlRt;
  
  
  [UmlElement(Id="939cf94c-bd9b-4e64-a806-2e6f23bab6a9")]
  public partial class team_member : App.Model.comm.base_class {
    
    #region *** Constructors ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team_member(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) : 
        base(serviceProvider) {
      try {
        this.ObjectCreated();
      }
      catch (System.Exception ) {
        this.Deinitialize(serviceProvider);
        throw;
      }
    }
    
    /// <summary>
    /// For framework internal use only
    /// Constructor public for one reason only; to avoid need for ReflectionPermission in reduced trust
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team_member(Eco.ObjectImplementation.IContent content) : 
        base(content) {
      this.ObjectFetched();
    }
    
    /// <summary>
    /// Creates an Offline object. Can for example be used by MVC runtime to pass values
    /// This is type equivalent to the eco object in everyway - but has none of the eco services
    /// It does however implement INotifyPropertyChanged and INotifyCollectionChanged
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team_member() {
      this.eco_Content = new EcoOfflineValues();
      this.ObjectCreated();
    }
    
    /// <summary>This method is called when the object has been created the first time (not when loaded from a db)</summary>
    partial void ObjectCreated();
    
    /// <summary>This method is called when the object has been loaded from a db (not when it is created the first time)</summary>
    partial void ObjectFetched();
    
    /// <summary>This method is called before the object is deleted. You can perform custom clean up or prevent the deletion by returning false or throw an exception (preferably EcoObjectDeleteException)</summary>
    partial void PreDelete(ref System.Boolean canDelete);
    
    #endregion *** Constructors ***
    
    #region *** ILoopback implementation ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override void set_MemberByIndex(int index, object value) {
      base.set_MemberByIndex(index, value);
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override object get_MemberByIndex(int index) {
      return base.get_MemberByIndex(index);
    }
    
    #endregion *** ILoopback implementation ***
    
    #region *** LoopbackIndex declarations ***
    
    new public struct Eco_LoopbackIndices {
      
      public const int Eco_FirstMember = App.Model.comm.base_class.Eco_LoopbackIndices.Eco_MemberCount;
      
      public const int userid = Eco_FirstMember;
      
      public const int username = (userid + 1);
      
      public const int team_group = (username + 1);
      
      public const int team_group_member_role = (team_group + 1);
      
      public const int all_team_group_member_role = (team_group_member_role + 1);
      
      public const int user = (all_team_group_member_role + 1);
      
      public const int team = (user + 1);
      
      public const int Eco_MemberCount = (team + 1);
    }
    
    #endregion *** LoopbackIndex declarations ***
    
    [UmlElement(Id="2334ba70-8f4e-43c8-abdd-940665fa643a", Index=Eco_LoopbackIndices.userid)]
    [UmlTaggedValue("derived", "True")]
    [UmlTaggedValue("Eco.DerivationOCL", "self.user.externalId")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string userid {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.userid, typeof(string))));
      }
    }
    
    [UmlElement(Id="85929d30-ff25-49d5-8778-80df80bf0b82", Index=Eco_LoopbackIndices.username)]
    [UmlTaggedValue("derived", "True")]
    [UmlTaggedValue("Eco.DerivationOCL", "self.user.Username")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string username {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.username, typeof(string))));
      }
    }
    
    [UmlElement("AssociationEnd", Id="15fbcb49-24bb-46b3-b236-beb14cdefd9c", Index=Eco_LoopbackIndices.team_group)]
    [UmlMetaAttribute("association", typeof(project_structPackage.team_memberteam_memberteam_groupteam_group), Index=0)]
    [UmlMetaAttribute("multiplicity", "1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team_group team_group {
      get {
        return ((team_group)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team_group, typeof(team_group))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team_group, ((object)(value)), "team_group");
      }
    }
    
    public team_group_member_role team_group_member_role {
      get {
        return ((team_group_member_role)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team_group_member_role, typeof(team_group_member_role))));
      }
    }
    
    [UmlElement("AssociationEnd", Id="479a954c-c7fa-4340-bc07-e47b6034d00f", Index=Eco_LoopbackIndices.all_team_group_member_role)]
    [UmlMetaAttribute("association", typeof(project_structPackage.team_memberall_team_memberteam_group_member_roleall_team_group_member_role), Index=0)]
    [UmlMetaAttribute("multiplicity", "0..*")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public IEcoList<team_group_member_role> all_team_group_member_role {
      get {
        return ((IEcoList<team_group_member_role>)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.all_team_group_member_role, typeof(IEcoList<team_group_member_role>))));
      }
    }
    
    [UmlElement("AssociationEnd", Id="86d23da1-2045-408e-b2b9-747bbe90f188", Index=Eco_LoopbackIndices.user)]
    [UmlMetaAttribute("association", typeof(project_structPackage.useruserteam_memberteam_member), Index=1)]
    [UmlMetaAttribute("multiplicity", "1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public App.Model.comm.user user {
      get {
        return ((App.Model.comm.user)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.user, typeof(App.Model.comm.user))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.user, ((object)(value)), "user");
      }
    }
    
    [UmlElement("AssociationEnd", Id="9596115a-6657-48cf-a3e9-037bce681e45", Index=Eco_LoopbackIndices.team)]
    [UmlMetaAttribute("association", typeof(project_structPackage.teamteamteam_memberteam_member), Index=0)]
    [UmlMetaAttribute("multiplicity", "1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public team team {
      get {
        return ((team)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team, typeof(team))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.team, ((object)(value)), "team");
      }
    }
  }
}
