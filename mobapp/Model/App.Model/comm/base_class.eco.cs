//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Model.comm {
  using System;
  using System.Collections;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.CodeDom.Compiler;
  using Eco.ObjectImplementation;
  using Eco.ObjectRepresentation;
  using Eco.Services;
  using Eco.Subscription;
  using Eco.UmlCodeAttributes;
  using Eco.UmlRt;
  
  
  [UmlElement(Id="1301cfd7-1f1d-4694-b6d9-79d926e714b1")]
  [UmlTaggedValue("Eco.TableMapping", "Children")]
  public abstract partial class base_class : Eco.ObjectImplementation.ILoopBack3, System.ComponentModel.INotifyPropertyChanged {
    
    #region *** Constructors ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    protected base_class(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) {
      this.Initialize(serviceProvider);
      try {
        this.ObjectCreated();
      }
      catch (System.Exception ) {
        this.Deinitialize(serviceProvider);
        throw;
      }
    }
    
    /// <summary>
    /// For framework internal use only
    /// Constructor public for one reason only; to avoid need for ReflectionPermission in reduced trust
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    protected base_class(Eco.ObjectImplementation.IContent content) {
      this.eco_Content = content;
      content.AssertLoopbackUnassigned();
      this.ObjectFetched();
    }
    
    /// <summary>
    /// Creates an Offline object. Can for example be used by MVC runtime to pass values
    /// This is type equivalent to the eco object in everyway - but has none of the eco services
    /// It does however implement INotifyPropertyChanged and INotifyCollectionChanged
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public base_class() {
      this.eco_Content = new EcoOfflineValues();
      this.ObjectCreated();
    }
    
    /// <summary>This method is called when the object has been created the first time (not when loaded from a db)</summary>
    partial void ObjectCreated();
    
    /// <summary>This method is called when the object has been loaded from a db (not when it is created the first time)</summary>
    partial void ObjectFetched();
    
    /// <summary>This method is called before the object is deleted. You can perform custom clean up or prevent the deletion by returning false or throw an exception (preferably EcoObjectDeleteException)</summary>
    partial void PreDelete(ref System.Boolean canDelete);
    
    #endregion *** Constructors ***
    
    #region *** ILoopback implementation ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public virtual void set_MemberByIndex(int index, object value) {
      switch(index) {
      case Eco_LoopbackIndices.update_dt:
      this.update_dt = ((System.DateTime)(value));
        break;
      default:
      throw new System.IndexOutOfRangeException();
      }
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public virtual object get_MemberByIndex(int index) {
      switch(index) {
      case Eco_LoopbackIndices.update_dt:
      return this.update_dt;
      default:
      throw new System.IndexOutOfRangeException();
      }
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    Eco.ObjectRepresentation.IObject Eco.ObjectRepresentation.IObjectProvider.AsIObject() {
      return this.eco_Content.AsIObject();
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    void Eco.ObjectImplementation.ILoopBack2.SetContent(Eco.ObjectImplementation.IContent content) {
      if ((this.eco_Content != null)) {
        throw new System.InvalidOperationException();
      }
      this.eco_Content = content;
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    Eco.ObjectImplementation.IContent Eco.ObjectImplementation.ILoopBack3.GetContent() {
      return this.eco_Content;
    }
    
    #endregion *** ILoopback implementation ***
    
    #region *** LoopbackIndex declarations ***
    
    public struct Eco_LoopbackIndices {
      
      public const int Eco_FirstMember = 0;
      
      public const int EID = Eco_FirstMember;
      
      public const int creater = (EID + 1);
      
      public const int updater = (creater + 1);
      
      public const int create_dt = (updater + 1);
      
      public const int newobj_id = (create_dt + 1);
      
      public const int update_dt = (newobj_id + 1);
      
      public const int create_user = (update_dt + 1);
      
      public const int update_user = (create_user + 1);
      
      public const int Eco_MemberCount = (update_user + 1);
    }
    
    #endregion *** LoopbackIndex declarations ***
    
    #region *** IObjectProvider implementation ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public virtual Eco.ObjectRepresentation.IObjectInstance AsIObject() {
      return this.eco_Content.AsIObject();
    }
    
    #endregion *** IObjectProvider implementation ***
    
    #region *** INotifyPropertyChanged implementation ***
    
    event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged {
    
      add { eco_Content.PropertyChanged += value; }
    
      remove { eco_Content.PropertyChanged -= value; }
    
    }
    
    #endregion *** INotifyPropertyChanged implementation ***
    
    #region *** ECO framework implementations ***
    
    protected Eco.ObjectImplementation.IContent eco_Content;
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    protected virtual void Initialize(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) {
      if ((this.eco_Content == null)) {
        Eco.ObjectImplementation.IInternalObjectContentFactory factory = serviceProvider.GetEcoService<Eco.ObjectImplementation.IInternalObjectContentFactory>();
        factory.CreateContent(this);
        this.eco_Content.LoopbackValid();
      }
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    protected virtual void Deinitialize(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) {
      if ((this.eco_Content == null)) {
        Eco.ObjectImplementation.IInternalObjectContentFactory factory = serviceProvider.GetEcoService<Eco.ObjectImplementation.IInternalObjectContentFactory>();
        factory.CreateContentFailed(this.eco_Content, this);
        this.eco_Content = null;
      }
    }
    
    #endregion *** ECO framework implementations ***
    
    [UmlElement(Id="3143ba19-e119-4cf5-98b3-a22903110272", Index=Eco_LoopbackIndices.EID)]
    [UmlTaggedValue("derived", "True")]
    [UmlTaggedValue("Eco.DerivationOCL", "self.externalId")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string EID {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.EID, typeof(string))));
      }
    }
    
    [UmlElement(Id="352023f3-8830-47f0-a6ec-e762b40ebf73", Index=Eco_LoopbackIndices.creater)]
    [UmlTaggedValue("derived", "True")]
    [UmlTaggedValue("Eco.DerivationOCL", "if self.create_user->isempty then\r\n\'\'\r\nelse\r\nself.create_user.username\r\nendif")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string creater {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.creater, typeof(string))));
      }
    }
    
    [UmlElement(Id="76fcfbc7-3d11-4d19-9d93-cc90e21d8ae3", Index=Eco_LoopbackIndices.updater)]
    [UmlTaggedValue("derived", "True")]
    [UmlTaggedValue("Eco.DerivationOCL", "if self.update_user->isempty then\r\n\'\'\r\nelse\r\nself.update_user.username\r\nendif")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string updater {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.updater, typeof(string))));
      }
    }
    
    [UmlElement(Id="78103b81-381d-4f27-b28a-34c6f4e255f9", Index=Eco_LoopbackIndices.create_dt)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public System.DateTime create_dt {
      get {
        return ((System.DateTime)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.create_dt, typeof(System.DateTime))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.create_dt, ((object)(value)), "create_dt");
      }
    }
    
    [UmlElement(Id="d42e7682-a868-47a5-9f8a-d15529037712", Index=Eco_LoopbackIndices.newobj_id)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string newobj_id {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.newobj_id, typeof(string))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.newobj_id, ((object)(value)), "newobj_id");
      }
    }
    
    [UmlElement(Id="eeed9b70-9f7e-47b5-b9ea-6f86d11296df", Index=Eco_LoopbackIndices.update_dt)]
    [UmlTaggedValue("Eco.HasUserCode", "True")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public System.DateTime update_dt {
      get {
        this.update_dtReading();
        System.DateTime res = ((System.DateTime)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.update_dt, typeof(System.DateTime))));
        this.update_dtRead(ref res);
        return res;
      }
      protected set {
        System.DateTime oldValue = this.update_dt;
        System.DateTime newValue = value;
        bool abortModification = false;
        this.update_dtChanging(ref value, ref abortModification);
        if (abortModification) {
          return;
        }
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.update_dt, ((object)(value)), "update_dt");
        this.update_dtChanged(oldValue, newValue, value);
      }
    }
    
    [UmlElement("AssociationEnd", Id="13589661-8419-48db-ac2e-a3896a94a845", Index=Eco_LoopbackIndices.create_user)]
    [UmlMetaAttribute("association", typeof(commPackage.base_classnonameusercreate_user), Index=0)]
    [UmlMetaAttribute("multiplicity", "0..1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public user create_user {
      get {
        return ((user)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.create_user, typeof(user))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.create_user, ((object)(value)), "create_user");
      }
    }
    
    [UmlElement("AssociationEnd", Id="d42893a6-94e3-4b5d-aa33-53544f39b9b8", Index=Eco_LoopbackIndices.update_user)]
    [UmlMetaAttribute("association", typeof(App.Model.App_ModelPackage.userupdate_userbase_classnoname2), Index=1)]
    [UmlMetaAttribute("multiplicity", "0..1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public user update_user {
      get {
        return ((user)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.update_user, typeof(user))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.update_user, ((object)(value)), "update_user");
      }
    }
    
    #region *** update_dt partial methods ***
    
    /// <summary>This method is called before the attribute update_dt is read</summary>
    partial void update_dtReading();
    
    /// <summary>This method is called after update_dt is read. It is possible to change the value here.</summary>
    partial void update_dtRead(ref DateTime value);
    
    /// <summary>This method is called before update_dt is modified, it is possible to change the value that is stored here or abort the modification</summary>
    partial void update_dtChanging(ref DateTime value, ref bool abortModification);
    
    /// <summary>This method is called after update_dt is modified</summary>
    /// <param name="oldValue">This is the value that update_dt had before the modification</param>
    /// <param name="newValue">This is the value that someone tried to set</param>
    /// <param name="finalValue">This is the value that update_dt has after the modification</param>
    partial void update_dtChanged(DateTime oldValue, DateTime newValue, DateTime finalValue);
    
    #endregion *** update_dt partial methods ***
  }
}
