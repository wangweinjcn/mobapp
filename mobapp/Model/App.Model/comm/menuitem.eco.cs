//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Model.comm {
  using System;
  using System.Collections;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.CodeDom.Compiler;
  using Eco.ObjectImplementation;
  using Eco.ObjectRepresentation;
  using Eco.Services;
  using Eco.Subscription;
  using Eco.UmlCodeAttributes;
  using Eco.UmlRt;
  
  
  [UmlElement(Id="70702906-7062-474e-b7c0-574a844958ba")]
  public partial class menuitem : App.Model.comm.base_class {
    
    #region *** Constructors ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public menuitem(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) : 
        base(serviceProvider) {
      try {
        this.ObjectCreated();
      }
      catch (System.Exception ) {
        this.Deinitialize(serviceProvider);
        throw;
      }
    }
    
    /// <summary>
    /// For framework internal use only
    /// Constructor public for one reason only; to avoid need for ReflectionPermission in reduced trust
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public menuitem(Eco.ObjectImplementation.IContent content) : 
        base(content) {
      this.ObjectFetched();
    }
    
    /// <summary>
    /// Creates an Offline object. Can for example be used by MVC runtime to pass values
    /// This is type equivalent to the eco object in everyway - but has none of the eco services
    /// It does however implement INotifyPropertyChanged and INotifyCollectionChanged
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public menuitem() {
      this.eco_Content = new EcoOfflineValues();
      this.ObjectCreated();
    }
    
    /// <summary>This method is called when the object has been created the first time (not when loaded from a db)</summary>
    partial void ObjectCreated();
    
    /// <summary>This method is called when the object has been loaded from a db (not when it is created the first time)</summary>
    partial void ObjectFetched();
    
    /// <summary>This method is called before the object is deleted. You can perform custom clean up or prevent the deletion by returning false or throw an exception (preferably EcoObjectDeleteException)</summary>
    partial void PreDelete(ref System.Boolean canDelete);
    
    #endregion *** Constructors ***
    
    #region *** ILoopback implementation ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override void set_MemberByIndex(int index, object value) {
      base.set_MemberByIndex(index, value);
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override object get_MemberByIndex(int index) {
      return base.get_MemberByIndex(index);
    }
    
    #endregion *** ILoopback implementation ***
    
    #region *** LoopbackIndex declarations ***
    
    new public struct Eco_LoopbackIndices {
      
      public const int Eco_FirstMember = App.Model.comm.base_class.Eco_LoopbackIndices.Eco_MemberCount;
      
      public const int key = Eco_FirstMember;
      
      public const int is_new = (key + 1);
      
      public const int name = (is_new + 1);
      
      public const int is_update = (name + 1);
      
      public const int menugroup = (is_update + 1);
      
      public const int Eco_MemberCount = (menugroup + 1);
    }
    
    #endregion *** LoopbackIndex declarations ***
    
    [UmlElement(Id="5ae87658-e093-43b7-af71-5abd415c5b83", Index=Eco_LoopbackIndices.key)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string key {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.key, typeof(string))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.key, ((object)(value)), "key");
      }
    }
    
    [UmlElement(Id="73ca3de9-1e72-4036-b30c-b3a7a783254c", Index=Eco_LoopbackIndices.is_new)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public bool is_new {
      get {
        return ((bool)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.is_new, typeof(bool))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.is_new, ((object)(value)), "is_new");
      }
    }
    
    [UmlElement(Id="a42023b5-21f4-4662-b372-af747f0df6a9", Index=Eco_LoopbackIndices.name)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string name {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.name, typeof(string))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.name, ((object)(value)), "name");
      }
    }
    
    [UmlElement(Id="ca440afd-7287-4fd3-bf4b-d8c565bcc33c", Index=Eco_LoopbackIndices.is_update)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public bool is_update {
      get {
        return ((bool)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.is_update, typeof(bool))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.is_update, ((object)(value)), "is_update");
      }
    }
    
    [UmlElement("AssociationEnd", Id="014a02b9-99d7-46d6-96f4-8cf3b9577e0c", Index=Eco_LoopbackIndices.menugroup)]
    [UmlMetaAttribute("association", typeof(App.Model.App_ModelPackage.menuitemmenuitemmenugroupmenugroup), Index=0)]
    [UmlMetaAttribute("multiplicity", "0..1")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public menugroup menugroup {
      get {
        return ((menugroup)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.menugroup, typeof(menugroup))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.menugroup, ((object)(value)), "menugroup");
      }
    }
  }
}
