//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Model.comm {
  using System;
  using System.Collections;
  using System.Collections.Generic;
  using System.ComponentModel;
  using System.CodeDom.Compiler;
  using Eco.ObjectImplementation;
  using Eco.ObjectRepresentation;
  using Eco.Services;
  using Eco.Subscription;
  using Eco.UmlCodeAttributes;
  using Eco.UmlRt;
  
  
  [UmlElement(Id="18047d46-fd28-431d-87d4-a6f1bad088ba")]
  public partial class roles : App.Model.comm.base_class {
    
    #region *** Constructors ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public roles(Eco.ObjectRepresentation.IEcoServiceProvider serviceProvider) : 
        base(serviceProvider) {
      try {
        this.ObjectCreated();
      }
      catch (System.Exception ) {
        this.Deinitialize(serviceProvider);
        throw;
      }
    }
    
    /// <summary>
    /// For framework internal use only
    /// Constructor public for one reason only; to avoid need for ReflectionPermission in reduced trust
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public roles(Eco.ObjectImplementation.IContent content) : 
        base(content) {
      this.ObjectFetched();
    }
    
    /// <summary>
    /// Creates an Offline object. Can for example be used by MVC runtime to pass values
    /// This is type equivalent to the eco object in everyway - but has none of the eco services
    /// It does however implement INotifyPropertyChanged and INotifyCollectionChanged
    /// </summary>
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public roles() {
      this.eco_Content = new EcoOfflineValues();
      this.ObjectCreated();
    }
    
    /// <summary>This method is called when the object has been created the first time (not when loaded from a db)</summary>
    partial void ObjectCreated();
    
    /// <summary>This method is called when the object has been loaded from a db (not when it is created the first time)</summary>
    partial void ObjectFetched();
    
    /// <summary>This method is called before the object is deleted. You can perform custom clean up or prevent the deletion by returning false or throw an exception (preferably EcoObjectDeleteException)</summary>
    partial void PreDelete(ref System.Boolean canDelete);
    
    #endregion *** Constructors ***
    
    #region *** ILoopback implementation ***
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override void set_MemberByIndex(int index, object value) {
      base.set_MemberByIndex(index, value);
    }
    
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public override object get_MemberByIndex(int index) {
      return base.get_MemberByIndex(index);
    }
    
    #endregion *** ILoopback implementation ***
    
    #region *** LoopbackIndex declarations ***
    
    new public struct Eco_LoopbackIndices {
      
      public const int Eco_FirstMember = App.Model.comm.base_class.Eco_LoopbackIndices.Eco_MemberCount;
      
      public const int is_admin = Eco_FirstMember;
      
      public const int name = (is_admin + 1);
      
      public const int role_key = (name + 1);
      
      public const int user_role = (role_key + 1);
      
      public const int Eco_MemberCount = (user_role + 1);
    }
    
    #endregion *** LoopbackIndex declarations ***
    
    [UmlElement(Id="5535b623-60b4-4dd8-a351-d26521308ec6", Index=Eco_LoopbackIndices.is_admin)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public bool is_admin {
      get {
        return ((bool)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.is_admin, typeof(bool))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.is_admin, ((object)(value)), "is_admin");
      }
    }
    
    [UmlElement(Id="8bd98080-45e5-46ca-85d7-e1a93ab1cc84", Index=Eco_LoopbackIndices.name)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string name {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.name, typeof(string))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.name, ((object)(value)), "name");
      }
    }
    
    [UmlElement(Id="eebda1b1-61f1-448b-9346-30a581ea9a4a", Index=Eco_LoopbackIndices.role_key)]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public string role_key {
      get {
        return ((string)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.role_key, typeof(string))));
      }
      set {
        this.eco_Content.set_MemberByIndex_OfflineAware(Eco_LoopbackIndices.role_key, ((object)(value)), "role_key");
      }
    }
    
    [UmlElement("AssociationEnd", Id="9e658502-8531-4390-a22e-365dd7d59f7f", Index=Eco_LoopbackIndices.user_role)]
    [UmlMetaAttribute("association", typeof(App.Model.App_ModelPackage.rolesrolesuser_roleuser_role), Index=1)]
    [UmlMetaAttribute("multiplicity", "0..*")]
    [GeneratedCodeAttribute("ECO", "7.0.0.0")]
    public IEcoList<user_role> user_role {
      get {
        return ((IEcoList<user_role>)(this.eco_Content.get_MemberByIndex_OfflineAware(Eco_LoopbackIndices.user_role, typeof(IEcoList<user_role>))));
      }
    }
  }
}
